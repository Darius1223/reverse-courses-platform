name: Main pipeline

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}
  BACKEND_IMAGE_TAG: darius1223/reverse-courses:backend-${{ github.sha }}
  FRONTEND_IMAGE_TAG: darius1223/reverse-courses:frontend-${{ github.sha }}
  WEB_IMAGE_TAG: darius1223/reverse-courses:web-${{ github.sha }}
  DOCKER_LOGIN: ${{ secrets.DOCKER_LOGIN}}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD}}

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build the Docker image
      run: docker build --tag $BACKEND_IMAGE_TAG backend
    - name: Docker Login
      run: docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
    - name: Push to Docker registry
      run: docker push $BACKEND_IMAGE_TAG

  build-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build the Docker image [frontend]
      run: docker build --tag $FRONTEND_IMAGE_TAG frontend
    - name: Docker Login
      run: docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
    - name: Push to Docker registry
      run: docker push $FRONTEND_IMAGE_TAG

  build-web:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build the Docker image [frontend]
      run: docker build --tag $WEB_IMAGE_TAG -f web.Dockerfile .
    - name: Docker Login
      run: docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
    - name: Push to Docker registry
      run: docker push $WEB_IMAGE_TAG

  deploy:
    runs-on: ubuntu-22.04
    environment: production
    needs:
      - build-backend
      - build-frontend
      - build-web

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
        env:
          GIT_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          fetch-depth: 0

      - name: Install ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
          docker context create remote --docker host=ssh://${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_DEBUG: false
          envkey_AUTH__SECRET_KEY: ${{ secrets.AUTH__SECRET_KEY }}
          envkey_DATABASE_URL: ${{ secrets.DATABASE_URL }}
          some_other_variable: foobar
          file_name: .env
          fail_on_empty: false
          sort_keys: false

      - name: Docker compose
        env:
          IMAGE_REF: ${{ steps.meta.outputs.tags }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          DOCKER_CONTEXT=remote docker compose -f docker-compose-prod.yaml up -d

      - name: cleanup
        run: rm -rf ~/.ssh